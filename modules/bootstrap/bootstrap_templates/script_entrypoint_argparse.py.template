# Path: scripts/{script_file}

import sys
import argparse
import logging
from pathlib import Path
from typing import Optional, List

PROJECT_ROOT = Path(__file__).resolve().parent.parent
sys.path.append(str(PROJECT_ROOT))

try:
    from utils.logging_config import setup_logging, log_success
    {config_imports}
    from modules.{module_name} import (
        process_{module_name}_logic,
        execute_{module_name}_action
    )
except ImportError:
    print(f"Lỗi: Không thể import utils/modules...", file=sys.stderr)
    sys.exit(1)

def main():
    """Hàm điều phối chính."""

    # 1. Định nghĩa Parser
    parser = argparse.ArgumentParser(
        description="{cli_description}",
        epilog="{cli_epilog}"
    )

    # --- Các arguments được tạo tự động ---
    {argparse_arguments}
    # --- Hết arguments ---

    args = parser.parse_args()

    # 2. Setup Logging
    logger = setup_logging(script_name="{logger_name}")
    logger.debug("{logger_name} script started.")

    # --- Mở rộng Path (nếu có) ---
    {argparse_path_expands}
    # --- Hết mở rộng Path ---

    # 3. Chạy Core Logic
    try:
        result = process_{module_name}_logic(
            logger=logger,
{argparse_args_pass_to_core}
        )

        if result:
            execute_{module_name}_action(
                logger=logger,
                result=result
            )

        log_success(logger, "Hoàn thành.")

    except Exception as e:
        logger.error(f"❌ Đã xảy ra lỗi không mong muốn: {{e}}")
        logger.debug("Traceback:", exc_info=True)
        sys.exit(1)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n❌ [Lệnh dừng] Hoạt động của tool đã bị dừng.")
        sys.exit(1)