# Path: modules/tree/tree.toml.template
# Template cho file cấu hình .tree.toml (local scope)

# --- Section [{config_section_name}] ---
[{config_section_name}]

# level (Optional[int]): Giới hạn độ sâu hiển thị của cây.
# Bỏ comment và đặt giá trị số nguyên dương, ví dụ: level = 3
# Mặc định: không giới hạn (None)
# level = {toml_level}

# extensions (Optional[List[str]]): Chỉ hiển thị các file có đuôi trong danh sách này.
# Ghi đè hoàn toàn danh sách mặc định (là None - hiển thị tất cả).
# Để chỉ hiển thị file Python và Markdown: extensions = ["py", "md"]
# Mặc định: (Không lọc - {toml_extensions} là None)
# extensions = {toml_extensions}

# ignore (List[str]): Danh sách các pattern (giống .gitignore) để ẩn hoàn toàn khỏi cây.
# Các pattern này sẽ được NỐI VÀO danh sách mặc định của script.
# Ví dụ: ignore = ["*.tmp", ".env"]
# Mặc định (được thêm vào): {toml_ignore}
ignore = {toml_ignore}

# prune (List[str]): Danh sách các pattern thư mục để "cắt tỉa".
# Thư mục sẽ hiển thị nhưng nội dung bên trong bị ẩn ([...]).
# Các pattern này sẽ được NỐI VÀO danh sách mặc định của script.
# Ví dụ: prune = ["node_modules/", "vendor/"]
# Mặc định (được thêm vào): {toml_prune}
prune = {toml_prune}

# dirs-only (Union[str, List[str], None]): Chế độ chỉ hiển thị thư mục.
# - "_ALL_": Chỉ hiển thị thư mục cho toàn bộ cây (tương đương cờ -d).
# - ["pattern1", "pattern2/"]: Chỉ hiển thị thư mục con BÊN TRONG các thư mục khớp pattern.
# Các pattern này sẽ được GỘP VÀO danh sách mặc định (thường là rỗng).
# Ví dụ 1: dirs-only = "_ALL_"
# Ví dụ 2: dirs-only = ["assets", "static/"]
# Mặc định: {toml_dirs_only}
dirs-only = {toml_dirs_only}

# show-submodules (bool): Hiển thị nội dung của Git submodules.
# Mặc định: false (ẩn submodules)
show-submodules = {toml_show_submodules}

# use-gitignore (bool): Có tôn trọng file .gitignore hay không.
# Cờ --no-gitignore trên CLI sẽ ghi đè giá trị này thành false.
# Mặc định: true (luôn tôn trọng nếu là kho Git)
use-gitignore = {toml_use_gitignore}