#!/usr/bin/env python
# Path: utils/logging_config.py

import logging
import sys
from pathlib import Path

# C·∫•p ƒë·ªô logging t√πy ch·ªânh cho console:
# INFO: Th√¥ng b√°o th√†nh c√¥ng/kh·ªüi ƒë·ªông (d√πng emoji)
# WARNING: C·∫£nh b√°o
# ERROR: L·ªói

def configure_project_logger(script_name: str, log_dir: str = "logs", console_level=logging.INFO):
    """
    C·∫•u h√¨nh logging cho script.
    - Ghi chi ti·∫øt (DEBUG) v√†o file log.
    - Ghi t·ªëi gi·∫£n (INFO/WARNING/ERROR) ra console (stdout).
    """
    
    # 1. Kh·ªüi t·∫°o logger
    logger = logging.getLogger(script_name)
    logger.setLevel(logging.DEBUG) # M·ª©c th·∫•p nh·∫•t ƒë·ªÉ ƒë·∫£m b·∫£o t·∫•t c·∫£ ƒë·ªÅu ƒë∆∞·ª£c ghi v√†o file

    # Lo·∫°i b·ªè c√°c handler c≈© n·∫øu c√≥, ƒë·ªÉ tr√°nh logger b·ªã c·∫•u h√¨nh l·∫°i nhi·ªÅu l·∫ßn
    if logger.hasHandlers():
        logger.handlers.clear()

    # 2. T·∫°o th∆∞ m·ª•c logs
    log_path = Path(log_dir)
    log_path.mkdir(exist_ok=True)
    
    # --- ƒê·ªãnh d·∫°ng cho File Log (Chi ti·∫øt) ---
    file_formatter = logging.Formatter(
        '[%(asctime)s] [%(levelname)-8s] (%(name)s) %(message)s',
        datefmt='%Y-%m-%d %H:%M:%S'
    )
    
    # --- File Handler ---
    file_handler = logging.FileHandler(log_path / f'{script_name}.log')
    file_handler.setFormatter(file_formatter)
    file_handler.setLevel(logging.DEBUG)
    logger.addHandler(file_handler)

    # --- Console Handler (Th√¢n thi·ªán v·ªõi ng∆∞·ªùi d√πng) ---
    # Ta d√πng ƒë·ªãnh d·∫°ng ƒë∆°n gi·∫£n, v√† s·∫Ω d√πng h√†m helper ƒë·ªÉ th√™m emoji khi c·∫ßn
    console_formatter = logging.Formatter('%(message)s')
    
    console_handler = logging.StreamHandler(sys.stdout)
    console_handler.setFormatter(console_formatter)
    console_handler.setLevel(console_level) # Ch·ªâ hi·ªÉn th·ªã INFO tr·ªü l√™n
    logger.addHandler(console_handler)

    return logger

# ----------------------------------------------------------------------
# H√†m Helper ƒë·ªÉ t·∫°o ƒë·∫ßu ra console th√¢n thi·ªán
# ----------------------------------------------------------------------

def log_start(logger, message: str):
    """Ghi log b·∫Øt ƒë·∫ßu, hi·ªÉn th·ªã emoji kh·ªüi ƒë·ªông."""
    logger.info(f"üöÄ {message}")

def log_success(logger, message: str):
    """Ghi log th√†nh c√¥ng, hi·ªÉn th·ªã emoji th√†nh c√¥ng."""
    logger.info(f"‚úÖ {message}")
    
def log_warning(logger, message: str):
    """Ghi log c·∫£nh b√°o, hi·ªÉn th·ªã emoji c·∫£nh b√°o."""
    logger.warning(f"‚ö†Ô∏è C·∫¢NH B√ÅO: {message}")

def log_error(logger, message: str):
    """Ghi log l·ªói, hi·ªÉn th·ªã emoji l·ªói."""
    logger.error(f"‚ùå L·ªñI: {message}")

# Sau khi c·∫•u h√¨nh, ta c√≥ th·ªÉ d√πng logger.debug(), logger.error(), v.v...