# Path: docs/internal/tool_spec.template.toml
#
# BẢN THIẾT KẾ TOOL (TEMPLATE)
# (Cập nhật cho Typer và cấu trúc SRP)
# ---------------------------------
# Điền thông tin vào file này, sau đó chạy:
# python scripts/bootstrap_tool.py /path/to/your.spec.toml
#

# --- 1. THÔNG TIN CƠ BẢN ---
# (Bắt buộc)
[meta]
# Tên file thực thi trong /bin/ (ví dụ: cdiag, cpath, ctree)
tool_name = "c-new-tool"

# Tên file entrypoint Python trong /scripts/
script_file = "new_tool.py"

# --- NEW: Tên thư mục module trong /modules/ ---
module_name = "new_tool"

# Tên Logger cho setup_logging() (ví dụ: CDiag, CPath, CTree)
logger_name = "CNewTool"

# --- 2. CẤU HÌNH CLI ---
# (MỚI: Cấu hình chung cho CLI)
[cli]
# Chọn "typer" (mặc định) hoặc "argparse"
interface = "typer"

# allow_interspersed_args: Cho phép đối số (Argument) và tùy chọn (Option)
# xen kẽ (e.g., c_demo . --fix). (Chỉ dùng cho Typer)
allow_interspersed_args = true

# (Cấu hình [cli.help] giờ chỉ chứa text)
[cli.help]
# Mô tả chính cho Typer App() hoặc Argparse description
description = "Mô tả về công dụng của tool này."

# (Tùy chọn) Đoạn text hiển thị ở cuối --help (epilog)
epilog = "Ví dụ sử dụng: c-new-tool --fix /path/to/scan"

# --- 3. DANH SÁCH ARGUMENTS (TYPER) ---
# (MỚI: Cấu trúc đơn giản hơn)
#
# Định nghĩa các tham số cho hàm main() trong Typer.
# Bootstrap sẽ tự động:
# 1. Tạo hằng số DEFAULT_... trong _config.py
# 2. Tạo tham số typer.Option/Argument trong script_entrypoint.py
#

#
# --- MẪU 1: Positional Argument (ví dụ: ctree [start_path]) ---
#
[[cli.args]]
# Tên biến (ví dụ: target_path)
name = "target_path"
# (Bắt buộc) Kiểu dữ liệu Python (str, int, bool, Path)
type = "Path"
# (Tùy chọn) Giá trị mặc định. Nếu bỏ trống, nó sẽ là bắt buộc.
default = "."
# (Bắt buộc) Text trợ giúp
help = "Đường dẫn (file hoặc thư mục) để bắt đầu."
# (Tùy chọn) Đánh dấu là Argument (vị trí) thay vì Option (cờ)
is_argument = true

#
# --- MẪU 2: Cờ Option (ví dụ: cpath --fix) ---
#
[[cli.args]]
name = "fix"
# (Tùy chọn) Cờ ngắn
short = "-f"
type = "bool"
default = false
help = "Fix các file (thay vì chỉ kiểm tra)."
# (is_argument = false (mặc định) -> nó là Option)
# (type = bool -> nó tự động là cờ --fix)

#
# --- MẪU 3: Option có giá trị (ví dụ: ctree -L 3) ---
#
[[cli.args]]
name = "level"
short = "-L"
type = "int"
# (Nếu không có 'default', tham số sẽ là 'Optional[int]')
help = "Giới hạn độ sâu hiển thị."

#
# --- MẪU 4: Option có giá trị (ví dụ: cdiag -t svg) ---
#
[[cli.args]]
name = "format"
short = "-t"
type = "str"
default = "text"
help = "Định dạng đầu ra."
# (Typer có thể dùng Enum cho 'choices', nên ta bỏ trường 'choices')


# --- 4. TÀI LIỆU ---
# (Tùy chọn)
# Tự động tạo file docs/tools/c-new-tool.md
#
# [docs]
# enabled = true
# # Mô tả ngắn (1-2 câu) cho file README
# short_description = "Một công cụ mới để làm [việc X]."